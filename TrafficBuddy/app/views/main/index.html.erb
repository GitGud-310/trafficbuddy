<div id="map-canvas">
</div>

<%= javascript_tag do %>
    var events_latlons = [];
    <% TrafficEvent.all.each do |t| %>
        var latlons = [];
        <% LatLon.where(traffic_event: t).each do |l| %>
            var latlon = new google.maps.LatLng(<%= l.latitude  %>, <%= l.longitude %>);
            latlons.push(latlon);
        <%end%>
        events_latlons.push(latlons);
    <%end%>

    var events_titles = [];
    <% TrafficEvent.all.each do |t| %>
        events_titles.push("<%= t.title %>");
    <%end%>
<% end %>

<script>
    var default_lat = 49.2598379;
    var default_lng = -123.2459363;
    var mapOptions = {
        center: new google.maps.LatLng(default_lat, default_lng),
        zoom: 12
    };

    var directionsDisplay;
    var directionsService = new google.maps.DirectionsService();

    var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
    var marker;
    var openWindow;
    var markers = [];
    var markerForStep;
    var markersForStep = [];
    var stepDisplay = new google.maps.InfoWindow();

    var webcams;
    var infoWindow = new google.maps.InfoWindow();

    function centerMap(latLng) {
        map.panTo(latLng);
        if (marker) {
            marker.setMap(null);
            marker = null;
        }
        marker = new google.maps.Marker({
            map: map,
            animation: google.maps.Animation.DROP,
            position: latLng
        });
    }

    function geolocate() {
        utils.geolocate(function(position) {
            var latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            centerMap(latLng);
        });
    }

    function processForm(e) {
        e.preventDefault();
        utils.geocode($('#new_location').val(), function(results) {
            var latLng = new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng());
            centerMap(latLng);
        });
        $('#modal2').closeModal();
        return false;
    }

    function performSearch(e) {
        e.preventDefault();
        return false;
    }

    function generateInfoWindow(m) {
        infoWindow = new google.maps.InfoWindow({
            content: '<a class="waves-effect waves-light btn" onclick="createBookmark(' + m + ')"><i class="mdi-file-favorite left"></i>Bookmark this location!</a><br>' + '<%= flash[:notice] %>'
        });
        google.maps.event.addListener(m, 'click', function () {
            infoWindow.open(map, m);
        });
        google.maps.event.addListener(map, 'click', function () {
            if (infoWindow)
                infoWindow.close();
        });
        google.maps.event.addListener(map, 'drag', function() {
            if (infoWindow)
                infoWindow.close();
        });
    }
    

    function createBookmark(e) {
        var title = $(this).data('title');
        var latitude = $(this).data('lat');
        var longitude = $(this).data('lon');

        '<% if logged_in? %>'
            toast("Successfully bookmarked!", 2000);
        '<% else %>'
            toast("Sorry, you need to log in to use this feature.", 2000);
        return;
        '<% end %>'
        $.ajax({
            url:    '/bookmarked_locations/create',
            type:   'post',
            data:   {name: title,
                    latitude: latitude,
                    longitude: longitude
            }
        });


        <% @bookmark = BookmarkedLocation.where(user_id: current_user).last %>

        var li = '<tr class="bookmark-item" data-lat="' + latitude + '" data-lon="' + longitude + '">';
        li += '<td>' + title + '</td>';
        li += '<td>' + latitude + '</td>';
        li += '<td>' + longitude + '</td>';
        li += '<td class="waves-effect"><%= link_to 'DELETE', @bookmark, method: :delete, data: { confirm: 'Are you sure?' } %></td>'
        li += '</tr>';

        $('#bookmark-list tr:last').after(li);

        var tr = '<li class="end-dropdown" data-end="' + title + '"><a href="#!">' + title + '</a></li>';
        var tr2 = '<li class="divider"></li>';

        $('#dropdown1 ul').append(tr);
        $('#dropdown1 ul').append(tr2);

        $('#dropdown2 ul').append(tr);
        $('#dropdown2 ul').append(tr2);
    }

    function mapLayer(map) {
        var trafficLayer = new google.maps.TrafficLayer();
        trafficLayer.setMap(map);

        for (i=0; i < events_latlons.length; i++) {

            var lat_lon1 = events_latlons[i][0];
            var lat_lon2 = events_latlons[i][events_latlons[i].length - 1];

            if (events_latlons[i].length == 1) {
                putIcon(lat_lon1, events_titles[i], map);
            } else {
                putIcon(lat_lon1, events_titles[i], map);
                putIcon(lat_lon2, events_titles[i], map);
                drawLine(events_latlons[i], map);
            }

        }
    }

    function putIcon(lat_lon, title, map) {

        var image = 'images/construction_icon.png';

        var marker = new google.maps.Marker({
            position: lat_lon,
            map: map,
            icon: image
        });

        google.maps.event.addListener(marker, 'click', function() {
            if (openWindow)
                openWindow.close();

            openWindow =  new google.maps.InfoWindow({content: title});
            openWindow.open(map,marker);
        });

        google.maps.event.addListener(map, 'click', function() {
            if (openWindow)
                openWindow.close();
            openWindow = null;
        });

        google.maps.event.addListener(map, 'drag', function() {
            if (openWindow)
                openWindow.close();
            openWindow = null;
        });
    }

    function drawLine(lat_lons, map) {
        var constructionPath = new google.maps.Polyline({
            path: lat_lons,
            geodesic: true,
            strokeColor: '#282828',
            strokeOpacity: 1.0,
            strokeWeight: 2
        });

        constructionPath.setMap(map);
    }

    function calcRoute(e) {
        e.preventDefault();

        utils.loaderOverlay();
        for (var i = 0, marker; marker = markers[i]; i++) {
            marker.setMap(null);
        }

        var start = document.getElementById('start-loc').value;
        var end = document.getElementById('destination-loc').value;

        var request = {
            origin:start,
            destination:end,
            travelMode: google.maps.TravelMode.DRIVING
        };

        for (var i = 0; i < markersForStep.length; i++) {
            markersForStep[i].setMap(null);
        }

        directionsService.route(request, function(response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
                showSteps(response);
            }
            utils.loaderOverlayDone();
        });

        $('#trip-modal').closeModal();

    }


    function plotRoute(e) {
        var start = $(this).data('start');
        var end = $(this).data('end');

        var request = {
            origin:start,
            destination:end,
            travelMode: google.maps.TravelMode.DRIVING
        };

        for (var i = 0; i < markersForStep.length; i++) {
            markersForStep[i].setMap(null);
        }

        directionsService.route(request, function(response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
                showSteps(response);
            }
        });

        $('#past-trips-modal').closeModal();

    }

    function showSteps(directionResult) {

        var myRoute = directionResult.routes[0].legs[0];
        var image = 'images/step_icon.png';

        for (var i = 0; i < myRoute.steps.length; i++) {
            var marker = new google.maps.Marker({
                position: myRoute.steps[i].start_location,
                map: map,
                icon: image
            });
            attachInstructionText(marker, myRoute.steps[i].instructions);
            markersForStep[i] = marker;
        }
    }

    function attachInstructionText(marker, text) {
        google.maps.event.addListener(marker, 'click', function() {
            stepDisplay.setContent(text);
            stepDisplay.open(map, marker);
        });
    }

    function addToHistory() {
        var start = document.getElementById('start-loc').value;
        var end = document.getElementById('destination-loc').value;

        $.ajax({
            url: "<%= url_for :controller=>'planned_trips', :action=>'create' %>", // Route to the PlannedTrip Controller
            type: "POST",
            dataType: "json",
            data: { start_location: start, end_location: end }, // This goes to Controller in params hash, i.e. params[:file_name]
            complete: function() {},
            success: function() {},
            error: function() {}
        });


        <% @planned_trip = PlannedTrip.where(user_id: session[:user_id]).last %>
        var tr = '<tr class="planned-trip-row" data-start="' + start + '" data-end="' + end + '" style="cursor: pointer;"></tr>'
        var td1 = '<td> ' + start + ' </td>'
        var td2 = '<td> ' + end + ' </td>'
        var td3 = '<td> ' + '<%= Time.current() %>' + ' </td>'
        var td4 = '<td class="waves-effect"><%= link_to 'DELETE', @planned_trip, method: :delete, data: { confirm: 'Are you sure?' } %></td>'
        $('#planned-trip-table tr:last').after(tr);
        $('#planned-trip-table tr:last').append(td1);
        $('#planned-trip-table tr:last').append(td2);
        $('#planned-trip-table tr:last').append(td3);
        $('#planned-trip-table tr:last').append(td4);
    }

    function prepareTripPlanner() {
        $('#destination-loc').focus();
        document.getElementById('destination-loc').value = document.getElementById('search-query').value;
    }

    function setStart() {
        var start = $(this).data('start');
        document.getElementById('start-loc').value = start;
        $('#start-loc-label').addClass('active');
    }

    function setEnd() {
        var end = $(this).data('end');
        document.getElementById('destination-loc').value = end;
        $('destination-loc-label').addClass('active');
    }

    function initialize(field) {
        // Create the search box and link it to the UI element.
        var input = /** @type {HTMLInputElement} */(
                document.getElementById(field));

        var searchBox = new google.maps.places.SearchBox(
                /** @type {HTMLInputElement} */(input));

        // [START region_getplaces]
        // Listen for the event fired when the user selects an item from the
        // pick list. Retrieve the matching places for that item.
        google.maps.event.addListener(searchBox, 'places_changed', function() {
            var places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }
            for (var i = 0, marker; marker = markers[i]; i++) {
                marker.setMap(null);
            }

            // For each place, get the icon, place name, and location.
            if (field == 'search-query') {
                markers = [];
                var bounds = new google.maps.LatLngBounds();
                for (var i = 0, place; place = places[i]; i++) {

                    // Create a marker for each place.
                    // uncomment for specialized markers
                    var marker = new google.maps.Marker({
                        map: map,
                        title: place.name,
                        position: place.geometry.location,
                        animation: google.maps.Animation.DROP
                    });

//                    marker.info = new google.maps.InfoWindow({
////                        content: '<a class="waves-effect waves-light btn" onclick="createBookmark()" data-lat='+ this.position.lat() +'data-lon='+this.position.lng()+'data-title='+this.getTitle()+'><i class="mdi-file-favorite left"></i>Bookmark '+marker.getTitle()+'</a>'
//                    });

                    google.maps.event.addListener(marker, 'click', function() {
                        infoWindow.setContent('<a id="testinfo" class="waves-effect waves-light btn" data-lat="'+ this.position.lat() +'" data-lon="'+this.position.lng()+'" data-title="'+this.getTitle()+'"><i class="mdi-file-favorite left"></i>Bookmark '+this.getTitle()+'</a>');
                        infoWindow.open(map,this);
                        $('#testinfo').click(createBookmark);
                    });

                    google.maps.event.addListener(map, 'click', function() {
                        if (infoWindow)
                            infoWindow.close();
                    });

                    google.maps.event.addListener(map, 'drag', function() {
                        if (infoWindow)
                            infoWindow.close();
                    });

                    markers.push(marker);

                    bounds.extend(place.geometry.location);


                }

                map.fitBounds(bounds);
            }
        });
        // [END region_getplaces]

        // Bias the SearchBox results towards places that are within the bounds of the
        // current map's viewport.
        google.maps.event.addListener(map, 'bounds_changed', function() {
            var bounds = map.getBounds();
            searchBox.setBounds(bounds);
        });

        directionsDisplay = new google.maps.DirectionsRenderer();
        directionsDisplay.setMap(map);
    }


    function openInfoWindow( marker ){
        var title = marker.getTitle();
        var contentString = $('<a class="waves-effect waves-light btn" onclick="createBookmark()" data-lat='+ marker.position.lat() +'data-lon='+marker.position.lng()+'data-title='+marker.getTitle()+'><i class="mdi-file-favorite left"></i>Bookmark '+title+'</a><br>');
        if(infoWindow){
            infoWindow.close();
        }
        infoWindow = new google.maps.InfoWindow;
        infoWindow.setContent(contentString[0]);
        infoWindow.open(map, marker);
    }

    mapLayer(map);


    $('.traffic-card').click(centerMapCardClick)

    function webcamInit() {
        $.get('/webcams.kml', function(r) {
            var re = /http:\/\/former\.vancouver\.ca\/engsvcs\/streets\/roadwork\/.*\.htm/;
            webcams = toGeoJSON.kml(r).features;
            webcams.forEach(function(e) {
                if (e.properties.description.match(re)) {
                    var infowindow = new google.maps.InfoWindow({
                        content: "<iframe style='width: 650px; height: 600px;' src='" + e.properties.description.match(re)[0] + "'></iframe>" //e.properties.description.substring(4, e.properties.description.length) // remove <br> at beginning
                    });

                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(e.geometry.coordinates[1], e.geometry.coordinates[0]),
                        map: map,
                        icon: 'http://google.github.io/material-design-icons/image/svg/ic_camera_alt_24px.svg',
                        title: e.properties.name
                    });

                    google.maps.event.addListener(marker, 'click', function () {
                        if (openWindow)
                            openWindow.close();
                        openWindow =  infowindow;
                        infowindow.open(map, marker);
                    });
                };
            });
        });
    }


    document.getElementById('search-field').addEventListener('submit', performSearch);
    document.getElementById('location-form').addEventListener('submit', processForm);
    document.getElementById('location-submit').addEventListener('click', processForm);
    document.getElementById('trip-form').addEventListener('submit', function(e) {
        e.preventDefault();

        if (document.getElementById('start-loc').value == "" || document.getElementById('destination-loc').value == "") {
            return;
        }

        <% if logged_in? %>
            addToHistory();
            calcRoute(event);
        <% else %>
            calcRoute(event);
        <% end %>
    });
    document.getElementById('trip-submit').addEventListener('click', function(e) {
        e.preventDefault();

        if (document.getElementById('start-loc').value == "" || document.getElementById('destination-loc').value == "") {
            toast('Please fill out both fields!', 2000);
            return;
        }

        <% if logged_in? %>
            addToHistory();
            calcRoute(event);
        <% else %>
            calcRoute(event);
        <% end %>
    });
    document.getElementById('trip-planner').addEventListener('click', prepareTripPlanner);

    <% if logged_in? %>
        document.getElementById('select-past-trips').addEventListener('click', function() {
            $('#trip-modal').closeModal();
            $('#past-trips-modal').openModal();
        });

        document.getElementById('switch-trip-planner').addEventListener('click', function() {
            $('#past-trips-modal').closeModal();
            $('#trip-modal').openModal();
        });
    <% end %>

    google.maps.event.addDomListener(window, 'load', function() {
        initialize('search-query');
        initialize('start-loc');
        initialize('destination-loc');
        initialize('new_location');
        webcamInit();
    });

    $('.traffic-card').click(centerMapCardClick);
    $('.bookmark-item').click(centerMapCardClick);
    function centerMapCardClick(e) {
        map.panTo(new google.maps.LatLng($(this).data('lat'), $(this).data('lon')));
        map.setZoom(17);
        $('#bookmarked_locations-modal').closeModal();
    }

    $('.planned-trip-row').click(plotRoute);
    $('.dropdown-button').dropdown( { hover: false });
    $('.start-dropdown').click(setStart);
    $('.end-dropdown').click(setEnd);


</script>
